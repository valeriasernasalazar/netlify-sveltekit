import { c as create_ssr_component } from "../../chunks/ssr.js";
import "../../chunks/store.js";
import "firebase/firestore";
import "../../chunks/client.js";
const css = {
  code: ".mainContainer.svelte-qiddj4{min-height:100vh;background:rgb(197, 197, 197);color:black;position:relative;display:flex;flex-direction:column}",
  map: `{"version":3,"file":"+layout.svelte","sources":["+layout.svelte"],"sourcesContent":["<script>\\n    import { onMount } from 'svelte';\\n    import { auth, db } from '../lib/firebase/firebase';\\n    import { getDoc, doc, setDoc } from 'firebase/firestore';\\n    import { authStore } from '../store/store';\\n    import { goto } from '$app/navigation';\\n\\n    const nonAuthRoutes = ['/'];\\n\\n    async function getUserRole(uid) {\\n        console.log(\\"Obteniendo rol del usuario con UID:\\", uid);\\n        const userRef = doc(db, 'users', uid);\\n        const docSnap = await getDoc(userRef);\\n        console.log(\\"Documento Firestore existe:\\", docSnap.exists());\\n        if (docSnap.exists()) {\\n            const userData = docSnap.data();\\n            console.log(\\"Datos del documento Firestore:\\", userData);\\n            return userData.role;\\n        }\\n        return 'mortal';\\n    }\\n\\n    async function isUserAuthorized(user, currentPath) {\\n        if (!user) return false;\\n        const role = await getUserRole(user.uid);\\n        console.log(\`Rol del usuario encontrado: \${role}\`);\\n        if (currentPath.startsWith('/admin') && role !== 'admin') {\\n            return false;\\n        }\\n        if (currentPath.startsWith('/nivel2') && role === 'mortal') {\\n            return false;\\n        }\\n        return true;\\n    }\\n\\n    onMount(() => {\\n        console.log(\\"Montando layout\\");\\n        const unsubscribe = auth.onAuthStateChanged(async user => {\\n            const currentPath = window.location.pathname;\\n\\n            if (!user && !nonAuthRoutes.includes(currentPath)) {\\n                goto(\\"/\\");\\n                return;\\n            }\\n\\n            if (user && currentPath === '/') {\\n                const role = await getUserRole(user.uid);\\n                if (role === 'admin') {\\n                    goto(\\"/admin\\");\\n                } else if (role === 'nivel2') {\\n                    goto(\\"/nivel2\\");\\n                } else {\\n                    goto(\\"/mortal\\");\\n                }\\n                return;\\n            }\\n\\n            if (user && !await isUserAuthorized(user, currentPath)) {\\n                goto(\\"/\\");\\n                return;\\n            }\\n\\n            if (!user) {\\n                return;\\n            }\\n\\n            let dataToSetToStore;\\n\\n            const docRef = doc(db, 'users', user.uid);\\n            const docSnap = await getDoc(docRef);\\n\\n            if (!docSnap.exists()) {\\n                const userRef = doc(db, 'users', user.uid);\\n\\n                dataToSetToStore = {\\n                    email: user.email,\\n                    todos: [],\\n                    role: 'mortal'\\n                };\\n\\n                await setDoc(userRef, dataToSetToStore, { merge: true });\\n            } else {\\n                console.log(\\"Fetching User\\");\\n                const userData = docSnap.data();\\n                dataToSetToStore = userData;\\n            }\\n\\n            authStore.update((curr) => {\\n                return {\\n                    ...curr,\\n                    user,\\n                    data: dataToSetToStore,\\n                    loading: false\\n                };\\n            });\\n        });\\n\\n        return () => unsubscribe();\\n    });\\n<\/script>\\n\\n<div class=\\"mainContainer\\">\\n    <slot />\\n</div>\\n\\n<style>\\n    .mainContainer {\\n        min-height: 100vh;\\n        background: rgb(197, 197, 197);\\n        color: black;\\n        position: relative;\\n        display: flex;\\n        flex-direction: column;\\n    }\\n</style>\\n"],"names":[],"mappings":"AA0GI,4BAAe,CACX,UAAU,CAAE,KAAK,CACjB,UAAU,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAC9B,KAAK,CAAE,KAAK,CACZ,QAAQ,CAAE,QAAQ,CAClB,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MACpB"}`
};
const Layout = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  $$result.css.add(css);
  return `<div class="mainContainer svelte-qiddj4">${slots.default ? slots.default({}) : ``} </div>`;
});
export {
  Layout as default
};
