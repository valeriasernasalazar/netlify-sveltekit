import { c as create_ssr_component, e as escape, b as add_attribute } from "../../../../chunks/ssr.js";
import "../../../../chunks/store.js";
import "../../../../chunks/client.js";
const css = {
  code: ".hola.svelte-1j8rj7t.svelte-1j8rj7t{align-self:center;margin-top:35px}.Mc.svelte-1j8rj7t.svelte-1j8rj7t{display:flex;flex-direction:column;min-height:10vh;gap:24px;padding:24px;width:26%;max-width:1000px;margin:0 auto;margin-right:10%;font-size:13px}.hB.svelte-1j8rj7t button.svelte-1j8rj7t{background:#d93443;color:white;padding:15px 15px;border:none;border-radius:4px;font-weight:700;display:flex;align-items:center;gap:4px}.hB.svelte-1j8rj7t button.svelte-1j8rj7t:hover{opacity:0.7;background-color:#fa6a02;cursor:pointer}.hB.svelte-1j8rj7t.svelte-1j8rj7t{display:flex;align-items:center;gap:10px}.input-section.svelte-1j8rj7t.svelte-1j8rj7t{display:flex;flex-direction:column;gap:10px;align-items:flex-start}.slider-container.svelte-1j8rj7t.svelte-1j8rj7t{display:flex;align-items:center;gap:10px;margin-left:20px}.button-group.svelte-1j8rj7t.svelte-1j8rj7t{display:flex;gap:10px}.input-section.svelte-1j8rj7t button.svelte-1j8rj7t{background:#d93443;color:white;padding:10px;border:none;border-radius:4px;font-weight:700;cursor:pointer}.input-section.svelte-1j8rj7t button.svelte-1j8rj7t:hover{opacity:0.7;background-color:#fa6a02}.input-section.svelte-1j8rj7t button.svelte-1j8rj7t:disabled{background:#ccc;cursor:not-allowed}#days.svelte-1j8rj7t.svelte-1j8rj7t{margin-right:10px}",
  map: `{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script>\\n    import { writable } from 'svelte/store';\\n    import { authHandlers } from '../../../store/store';\\n    import { goto } from '$app/navigation';\\n\\n    let daysToPredict = 1;  // Initial value for the slider\\n    let showGraph = false;  // To control the visibility of the graph\\n    let isLoading = false;  // To control the loading state\\n\\n    async function handlePredict() {\\n        isLoading = true;\\n        try {\\n            const response = await fetch('/api/modelo', {\\n                method: 'POST',\\n                headers: {\\n                    'Content-Type': 'application/json'\\n                },\\n                body: JSON.stringify({ days: daysToPredict })\\n            });\\n\\n            console.log('Raw response:', response);\\n\\n            if (!response.ok) {\\n                const errorData = await response.json();\\n                console.error('Error:', errorData.error);\\n                return;\\n            }\\n\\n            const data = await response.json();\\n            console.log(data);\\n            showGraph = true;  // Show the graph after successful prediction\\n        } catch (error) {\\n            console.error('Fetch error:', error);\\n        } finally {\\n            isLoading = false;  // Hide loading indicator\\n        }\\n    }\\n\\n    function handleViewDashboard() {\\n        showGraph = false;  // Hide the graph and show the dashboard again\\n    }\\n<\/script>\\n\\n<div class=\\"Mc\\">\\n    <div class=\\"Hc\\">\\n        <div class=\\"hB\\">\\n            <button on:click={() => goto('/admin')}>\\n                <i class=\\"fa-solid fa-arrow-left\\"></i>\\n                <p>Inicio</p>\\n            </button>\\n            <button on:click={authHandlers.logout}>\\n                <i class=\\"fa-solid fa-right-from-bracket\\"></i>\\n                <p>Cerrar Sesión</p>\\n            </button>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\"input-section\\">\\n    <div class=\\"slider-container\\">\\n        <label for=\\"days\\">Cantidad de días a predecir: {daysToPredict}</label>\\n        <input type=\\"range\\" id=\\"days\\" min=\\"1\\" max=\\"30\\" bind:value={daysToPredict} />\\n        <div class=\\"button-group\\">\\n            <button on:click={handlePredict} disabled={isLoading}>\\n                {#if isLoading}\\n                    Cargando...\\n                {:else}\\n                    Predecir\\n                {/if}\\n            </button>\\n            {#if showGraph}\\n                <button on:click={handleViewDashboard}>Ver Dashboard</button>\\n            {/if}\\n        </div>\\n    </div>\\n</div>\\n\\n{#if showGraph}\\n    <iframe title=\\"Evaluacion Ingresos\\" class=\\"hola\\" width=\\"1130\\" height=\\"700\\" src=\\"/evolucion_ingresos.html\\" frameborder=\\"0\\" allowFullScreen=\\"true\\"></iframe>\\n{:else}\\n    <iframe title=\\"MIGRANTES_FINAL (1)\\" class=\\"hola\\" width=\\"1130\\" height=\\"700\\" src=\\"https://app.powerbi.com/view?r=eyJrIjoiOTg5NDE0MDctNjI3YS00YzlkLTlhYTgtYWMyZGU0Nzc5MzM2IiwidCI6ImM2NWEzZWE2LTBmN2MtNDAwYi04OTM0LTVhNmRjMTcwNTY0NSIsImMiOjR9\\" frameborder=\\"0\\" allowFullScreen=\\"true\\"></iframe>   \\n{/if}\\n\\n<style>\\n    .hola {\\n        align-self: center;\\n        margin-top:35px;\\n    }\\n\\n    .Mc {\\n        display: flex;\\n        flex-direction: column;\\n        min-height: 10vh;\\n        gap: 24px;\\n        padding: 24px;\\n        width: 26%;\\n        max-width: 1000px;\\n        margin: 0 auto;\\n        margin-right: 10%;\\n        font-size: 13px;\\n    }\\n\\n    .hB button {\\n        background: #d93443;\\n        color: white;\\n        padding: 15px 15px;\\n        border: none;\\n        border-radius: 4px;\\n        font-weight: 700;\\n        display: flex;\\n        align-items: center;\\n        gap: 4px;\\n    }\\n\\n    .hB button:hover {\\n        opacity: 0.7;\\n        background-color: #fa6a02;\\n        cursor: pointer;\\n    }\\n\\n    .hB {\\n        display: flex;\\n        align-items: center;\\n        gap: 10px;\\n    }\\n\\n    .input-section {\\n        display: flex;\\n        flex-direction: column;\\n        gap: 10px;\\n        align-items: flex-start;\\n    }\\n\\n    .slider-container {\\n        display: flex;\\n        align-items: center;\\n        gap: 10px;\\n        margin-left:20px;\\n    }\\n\\n    .button-group {\\n        display: flex;\\n        gap: 10px;\\n    }\\n\\n    .input-section button {\\n        background: #d93443;\\n        color: white;\\n        padding: 10px;\\n        border: none;\\n        border-radius: 4px;\\n        font-weight: 700;\\n        cursor: pointer;\\n    }\\n\\n    .input-section button:hover {\\n        opacity: 0.7;\\n        background-color: #fa6a02;\\n    }\\n\\n    .input-section button:disabled {\\n        background: #ccc;\\n        cursor: not-allowed;\\n    }\\n\\n    .graph-section {\\n        display: flex;\\n        flex-direction: column;\\n        align-items: center;\\n        gap: 10px;\\n    }\\n\\n    .graph-section button {\\n        background: #d93443;\\n        color: white;\\n        padding: 10px;\\n        border: none;\\n        border-radius: 4px;\\n        font-weight: 700;\\n        cursor: pointer;\\n    }\\n\\n    .graph-section button:hover {\\n        opacity: 0.7;\\n        background-color: #fa6a02;\\n    }\\n\\n    #days {\\n        margin-right: 10px;\\n    }\\n</style>\\n"],"names":[],"mappings":"AAoFI,mCAAM,CACF,UAAU,CAAE,MAAM,CAClB,WAAW,IACf,CAEA,iCAAI,CACA,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,UAAU,CAAE,IAAI,CAChB,GAAG,CAAE,IAAI,CACT,OAAO,CAAE,IAAI,CACb,KAAK,CAAE,GAAG,CACV,SAAS,CAAE,MAAM,CACjB,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,YAAY,CAAE,GAAG,CACjB,SAAS,CAAE,IACf,CAEA,kBAAG,CAAC,qBAAO,CACP,UAAU,CAAE,OAAO,CACnB,KAAK,CAAE,KAAK,CACZ,OAAO,CAAE,IAAI,CAAC,IAAI,CAClB,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,GAAG,CAClB,WAAW,CAAE,GAAG,CAChB,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,GAAG,CAAE,GACT,CAEA,kBAAG,CAAC,qBAAM,MAAO,CACb,OAAO,CAAE,GAAG,CACZ,gBAAgB,CAAE,OAAO,CACzB,MAAM,CAAE,OACZ,CAEA,iCAAI,CACA,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,GAAG,CAAE,IACT,CAEA,4CAAe,CACX,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,GAAG,CAAE,IAAI,CACT,WAAW,CAAE,UACjB,CAEA,+CAAkB,CACd,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,GAAG,CAAE,IAAI,CACT,YAAY,IAChB,CAEA,2CAAc,CACV,OAAO,CAAE,IAAI,CACb,GAAG,CAAE,IACT,CAEA,6BAAc,CAAC,qBAAO,CAClB,UAAU,CAAE,OAAO,CACnB,KAAK,CAAE,KAAK,CACZ,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,GAAG,CAClB,WAAW,CAAE,GAAG,CAChB,MAAM,CAAE,OACZ,CAEA,6BAAc,CAAC,qBAAM,MAAO,CACxB,OAAO,CAAE,GAAG,CACZ,gBAAgB,CAAE,OACtB,CAEA,6BAAc,CAAC,qBAAM,SAAU,CAC3B,UAAU,CAAE,IAAI,CAChB,MAAM,CAAE,WACZ,CAwBA,mCAAM,CACF,YAAY,CAAE,IAClB"}`
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let daysToPredict = 1;
  $$result.css.add(css);
  return `<div class="Mc svelte-1j8rj7t"><div class="Hc"><div class="hB svelte-1j8rj7t"><button class="svelte-1j8rj7t" data-svelte-h="svelte-92lfck"><i class="fa-solid fa-arrow-left"></i> <p>Inicio</p></button> <button class="svelte-1j8rj7t" data-svelte-h="svelte-1p6l6vt"><i class="fa-solid fa-right-from-bracket"></i> <p>Cerrar Sesión</p></button></div></div></div> <div class="input-section svelte-1j8rj7t"><div class="slider-container svelte-1j8rj7t"><label for="days">Cantidad de días a predecir: ${escape(daysToPredict)}</label> <input type="range" id="days" min="1" max="30" class="svelte-1j8rj7t"${add_attribute("value", daysToPredict, 0)}> <div class="button-group svelte-1j8rj7t"><button ${""} class="svelte-1j8rj7t">${`Predecir`}</button> ${``}</div></div></div> ${`<iframe title="MIGRANTES_FINAL (1)" class="hola svelte-1j8rj7t" width="1130" height="700" src="https://app.powerbi.com/view?r=eyJrIjoiOTg5NDE0MDctNjI3YS00YzlkLTlhYTgtYWMyZGU0Nzc5MzM2IiwidCI6ImM2NWEzZWE2LTBmN2MtNDAwYi04OTM0LTVhNmRjMTcwNTY0NSIsImMiOjR9" frameborder="0" allowfullscreen="true"></iframe>`}`;
});
export {
  Page as default
};
